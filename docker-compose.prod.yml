version: "3.8"

services:
  # Redis - shared by all microservices
  redis:
    image: redis:7-alpine
    container_name: realworld-redis-prod
    ports:
      - "6381:6379"
    volumes:
      - redis_data_prod:/data
    command: redis-server --appendonly yes
    networks:
      - realworld-network-prod
    restart: unless-stopped

  # Redis Insight - GUI for Redis
  redis-insight:
    image: redis/redisinsight:2.68.0
    container_name: realworld-redis-insight-prod
    ports:
      - "5540:5540"
    volumes:
      - redis_insight_prod:/db
    environment:
      - REDIS_INSIGHT_PORT=8001
      - REDIS_INSIGHT_HOST=0.0.0.0
    networks:
      - realworld-network-prod
    restart: unless-stopped
    depends_on:
      - redis

  # PostgreSQL databases - separate for each microservice
  postgres-api-gateway:
    image: postgres:15-alpine
    container_name: realworld-postgres-api-gateway-prod
    environment:
      POSTGRES_DB: api_gateway_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5452:5432"
    volumes:
      - postgres_api_gateway_prod:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - realworld-network-prod
    restart: unless-stopped

  postgres-orders:
    image: postgres:15-alpine
    container_name: realworld-postgres-orders-prod
    environment:
      POSTGRES_DB: orders_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5453:5432"
    volumes:
      - postgres_orders_prod:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - realworld-network-prod
    restart: unless-stopped

  postgres-products:
    image: postgres:15-alpine
    container_name: realworld-postgres-products-prod
    environment:
      POSTGRES_DB: products_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5454:5432"
    volumes:
      - postgres_products_prod:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - realworld-network-prod
    restart: unless-stopped

  postgres-users:
    image: postgres:15-alpine
    container_name: realworld-postgres-users-prod
    environment:
      POSTGRES_DB: users_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5455:5432"
    volumes:
      - postgres_users_prod:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - realworld-network-prod
    restart: unless-stopped

  # Microservices
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
      target: production
    container_name: realworld-api-gateway-prod
    ports:
      - "5000:3000"
    environment:
      NODE_ENV: production
      REDIS_URL: redis://redis:6379
      POSTGRES_HOST: postgres-api-gateway
      POSTGRES_PORT: 5432
      POSTGRES_DB: api_gateway_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      - redis
      - postgres-api-gateway
    networks:
      - realworld-network-prod
    restart: unless-stopped

  orders-service:
    build:
      context: .
      dockerfile: apps/orders-service/Dockerfile
      target: production
    container_name: realworld-orders-service-prod
    ports:
      - "5001:3001"
    environment:
      NODE_ENV: production
      REDIS_URL: redis://redis:6379
      POSTGRES_HOST: postgres-orders
      POSTGRES_PORT: 5432
      POSTGRES_DB: orders_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      - redis
      - postgres-orders
    networks:
      - realworld-network-prod
    restart: unless-stopped

  product-service:
    build:
      context: .
      dockerfile: apps/product-service/Dockerfile
      target: production
    container_name: realworld-product-service-prod
    ports:
      - "5002:3002"
    environment:
      NODE_ENV: production
      REDIS_URL: redis://redis:6379
      POSTGRES_HOST: postgres-products
      POSTGRES_PORT: 5432
      POSTGRES_DB: products_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      - redis
      - postgres-products
    networks:
      - realworld-network-prod
    restart: unless-stopped

  users-service:
    build:
      context: .
      dockerfile: apps/users-service/Dockerfile
      target: production
    container_name: realworld-users-service-prod
    ports:
      - "5003:3003"
    environment:
      NODE_ENV: production
      REDIS_URL: redis://redis:6379
      POSTGRES_HOST: postgres-users
      POSTGRES_PORT: 5432
      POSTGRES_DB: users_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      - redis
      - postgres-users
    networks:
      - realworld-network-prod
    restart: unless-stopped

volumes:
  redis_data_prod:
  redis_insight_prod:
  postgres_api_gateway_prod:
  postgres_orders_prod:
  postgres_products_prod:
  postgres_users_prod:

networks:
  realworld-network-prod:
    driver: bridge
